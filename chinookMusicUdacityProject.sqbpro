<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="G:/Datasets/chinook_db/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3954"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainAlbum"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1">#countries have the most Invoices
select BillingCountry, count(InvoiceId) as Invoices
from Invoice
group by BillingCountry
order by Invoices desc


#city has the best customers
select city, sum(Invoice.total) as Total_Invoices
from Customer join Invoice
on Customer.CustomerId = Invoice.CustomerId
group by City
order by Total_Invoices desc
limit 5


#the best customer
select Customer.CustomerId, FirstName,LastName, sum(Invoice.total) as Total_purchases
from Customer join Invoice
on Customer.CustomerId = Invoice.CustomerId
group by FirstName,LastName
order by Total_purchases desc
limit 1


#Email belong to Rock music listeners
select DISTINCT(Email),FirstName,LastName,Genre.Name as MusicName
from Invoice join Customer
on Invoice.CustomerId = Customer.CustomerId
join InvoiceLine
on Invoice.InvoiceId = InvoiceLine.InvoiceId
join track 
on InvoiceLine.TrackId = Track.TrackId
join Genre
on Track.GenreId = Genre.GenreId
where MusicName = &quot;Rock&quot;
order by Email 


#top 10 rock bands
select Album.ArtistId,Artist.Name, count(Genre.GenreId) as songs
from Artist join Album
on Album.ArtistId = Artist.ArtistId
join Track
on Album.AlbumId = Track.AlbumId
join Genre
on Genre.GenreId = Track.GenreId
group by Artist.Name
order by songs desc
limit 10


#The top artists according to invoice amounts 
select Artist.Name, sum(InvoiceLine.UnitPrice*InvoiceLine.Quantity) as MostPaid
from Artist join Album
on Artist.ArtistId = Album.ArtistId
join Track
on Album.AlbumId = Track.AlbumId
join InvoiceLine
on Track.TrackId = InvoiceLine.TrackId
group by Artist.Name
order by MostPaid desc
limit 5



#Customers that most paid for artist
select distinct(Artist.Name),sum(Invoice.Total) as AmountSpent ,Customer.CustomerId, Customer.FirstName, Customer.LastName
from Artist join Album
on Artist.ArtistId = Album.ArtistId
join Track 
on Album.AlbumId = Track.AlbumId
join InvoiceLine
on Track.TrackId = InvoiceLine.TrackId
join Invoice
on InvoiceLine.InvoiceId = Invoice.InvoiceId
join Customer
on Invoice.CustomerId = Customer.CustomerId 
group by 1,3,4,5
order by 2 desc
limit 7


#the most popular music (Genre) for each country and purchase
WITH Q1 AS 
(select Invoice.BillingCountry as Country, Genre.Name as Name, count(Track.TrackId*Track.UnitPrice) as Purchase, Genre.GenreId as ID
from Customer join Invoice
on Customer.CustomerId = Invoice.CustomerId
join InvoiceLine
on Invoice.InvoiceId = InvoiceLine.InvoiceId
join Track
on InvoiceLine.TrackId = Track.TrackId
join Genre
on Track.GenreId = Genre.GenreId
group by 1,2
order by 3 desc)
select Q2.Purchases,Q2.Country,Q1.Name,Q1.ID
from 
(select max(Purchase) as Purchases, Country, Name,ID
from Q1
group by 2
order by 2) AS Q2
join Q1 on Q1.Purchase = Q2.Purchases
and Q1.Country=Q2.Country


#songs that his longest larger than the average
select Track.Name,Track.Milliseconds
from track 
where Track.Milliseconds &gt; (select avg(Track.Milliseconds) from Track)
order by Track.Milliseconds desc


#customer that has spent the most on music for each country
WITH Q1 AS 
(select Customer.CustomerId,Customer.FirstName, Customer.LastName, Customer.Country, sum(Invoice.Total) as TotalSpent
from Customer join Invoice
on Customer.CustomerId = Invoice.CustomerId
group by 1,2,3,4
order by 5)
select Q2.Country,Q2.TotalSpent,Q1.FirstName,Q1.LastName,Q1.CustomerId
from 
(select Country,max(TotalSpent) as TotalSpent, FirstName,LastName,CustomerId
from Q1
group by 1
order by 2 desc) AS Q2
join Q1 on Q1.TotalSpent = Q2.TotalSpent
and Q1.Country=Q2.Country


#PlusQuery
#Numberofsongs
select Artist.Name, count(Track.TrackId) as NumberOfSongs
from Artist join Album
on Artist.ArtistId = Album.ArtistId
join Track
on Album.AlbumId = Track.AlbumId
group by Artist.Name
order by NumberOfSongs DESC
limit 5</sql><current_tab id="0"/></tab_sql></sqlb_project>
